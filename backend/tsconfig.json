{
  "compilerOptions": {
    /* Language and Environment */
    "target": "ES2020", // Or "ES2021", "ES2022", "ESNext". Node.js versions support modern JS.
    "lib": ["ES2020", "DOM"], // "DOM" might not be strictly necessary for backend but often included.
    "experimentalDecorators": true, // If you plan to use decorators (e.g., with TypeORM or routing-controllers)
    "emitDecoratorMetadata": true,  // Companion to experimentalDecorators

    /* Modules */
    "module": "commonjs", // Standard for Node.js
    // "rootDir": "./src", // Where your .ts source files are
    "moduleResolution": "node", // How modules are resolved
    "baseUrl": "./src", // Base directory for non-relative module imports (e.g., import 'services/myService')
    "paths": { // Optional: Define path aliases if you like
      "@/*": ["*"] // Example: import '@/services/myService' instead of '../../services/myService'
    },
    "resolveJsonModule": true, // Allows importing .json files as modules

    /* JavaScript Support */
    // "allowJs": true, // Set to true if you want to allow .js files in your .ts project
    // "checkJs": true, // Type-check .js files if allowJs is true

    /* Emit */
    "outDir": "./dist", // Where to output the compiled .js files
    "esModuleInterop": true, // Enables compatibility with CommonJS modules that use `module.exports`
    "forceConsistentCasingInFileNames": true, // Ensures case-sensitive file naming consistency

    /* Type Checking */
    "strict": true, // Enables all strict type-checking options (recommended)
    // "noImplicitAny": true, // Part of "strict" - Raise error on expressions and declarations with an implied 'any' type.
    // "strictNullChecks": true, // Part of "strict" - More rigorous null/undefined checking.
    "skipLibCheck": true, // Skip type checking of all declaration files (*.d.ts). Speeds up compilation.

    /* Completeness */
    // "sourceMap": true, // Generate source maps for debugging (useful for development)
  },
"include": [
  "src/**/*",
  "drizzle.config.ts" // Which files to include in the compilation
],
  "exclude": [
    "node_modules", // Exclude node_modules directory
    "**/*.spec.ts", // Exclude test files if they are co-located with source
    "dist" // Exclude the output directory
  ],
  "types": ["node"]
}